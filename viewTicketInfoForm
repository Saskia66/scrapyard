Public Class ViewTicket

    'global variables
    Public ticketN As String

    Public itemDesc

    Public cName As String
    Public cID As Integer
    Public cCell As String

    Public qty As Decimal
    Public amt As Decimal

    Public rWidth As String
    Public rHeight As String
    Public rImage As Image


    Private Sub searchBtn_Click(sender As Object, e As EventArgs) Handles searchBtn.Click

        PictureBox1.Image = Nothing
        PictureBox2.Image = Nothing

        BoxItems.Items.Clear()
        BoxItems.Text = ""
        itemAmt.Text = ""
        itemQ.Text = ""

        'ticket num variables
        ticketN = ticketNum.Text
        Dim Cid As Integer
        Dim tDate As Date

        Dim finNum As Integer
        Dim isVal As Boolean = True
        Dim cusImage As Byte()

        'adding customer image
        Try
            cusImage = Me.CustomersTableAdapter.findImg(Cid)
        Catch ex As Exception

        End Try

        Dim finCusImage As Image

        'try parse image
        Try
            Dim ms As System.IO.MemoryStream = New System.IO.MemoryStream(cusImage)
            finCusImage = System.Drawing.Image.FromStream(ms)

            Dim getbmp As New Bitmap(finCusImage)

            'get width and length
            rWidth = getbmp.Width.ToString
            rHeight = getbmp.Height.ToString

            rImage = getbmp

            'prepare image for display in box
            Dim bmp As Bitmap = New Bitmap(finCusImage, 196, 158)
            Dim finalImg As Image = bmp

            PictureBox1.Image = finalImg

        Catch ex As Exception

        End Try

        'find ticket number 
        Try
            finNum = Convert.ToInt32(ticketN)

        Catch ex As Exception

            MsgBox("Enter numbers only")

            isVal = False

        End Try

        If isVal = True Then

            Try

                Cid = Me.TicketsTableAdapter.findC(ticketN)
                tDate = Me.TicketsTableAdapter.findD(ticketN)

            Catch ex As Exception

                MsgBox("Ticket not found")

            End Try

        End If

        'items variables
        Dim list As New List(Of Integer)

        Dim n As Integer = 0

        'load items from ticket into combobox
        If Cid <> 0 Then

            ItemL.Visible = True
            BoxItems.Visible = True

            'display sales from ticket in combobox
            For Each dr As DataRow In FinalFinal.Sales.Rows

                If dr("ticket_ID") = finNum Then

                    list.Add(dr("Item_ID"))

                End If
                n += 1
            Next

            DateT.Text = tDate

            For Each item As Integer In list

                Dim val As String = Convert.ToString(item)

                BoxItems.Items.Add(item)

            Next

        Else
            MsgBox("Ticket not found")
        End If

        'customer variables

        Dim cName As String
        Dim cIdN As Integer
        Dim cCell As String
        Dim cAddr As String

        'fill customer fields

        If Cid <> 0 Then

            cName = Me.CustomersTableAdapter.findN(Cid)
            cIdN = Me.CustomersTableAdapter.findIDc(Cid)
            cCell = Me.CustomersTableAdapter.findCell(Cid)
            cAddr = Me.CustomersTableAdapter.findAddr(Cid)

            cusName.Text = cName
            cusId.Text = cIdN
            cusCell.Text = cCell
            cusAddr.Text = cAddr

        End If

    End Sub

    Private Sub TicketsBindingNavigatorSaveItem_Click(sender As Object, e As EventArgs)
        Me.Validate()
        Me.TicketsBindingSource.EndEdit()
        Me.TableAdapterManager.UpdateAll(Me.FinalFinal)

    End Sub

    Private Sub TicketsBindingNavigatorSaveItem_Click_1(sender As Object, e As EventArgs)
        Me.Validate()
        Me.TicketsBindingSource.EndEdit()
        Me.TableAdapterManager.UpdateAll(Me.FinalFinal)

    End Sub

    Private Sub ViewTicket_Load(sender As Object, e As EventArgs) Handles MyBase.Load
        'TODO: This line of code loads data into the 'FinalData.Sales' table. You can move, or remove it, as needed.
        Me.SalesTableAdapter1.Fill(Me.FinalData.Sales)
        'TODO: This line of code loads data into the 'FinalFinal.Customers' table. You can move, or remove it, as needed.
        Me.CustomersTableAdapter.Fill(Me.FinalFinal.Customers)
        'TODO: This line of code loads data into the 'FinalFinal.Items' table. You can move, or remove it, as needed.
        Me.ItemsTableAdapter.Fill(Me.FinalFinal.Items)
        'TODO: This line of code loads data into the 'FinalFinal.Sales' table. You can move, or remove it, as needed.
        Me.SalesTableAdapter.Fill(Me.FinalFinal.Sales)
        'TODO: This line of code loads data into the 'FinalFinal.Tickets' table. You can move, or remove it, as needed.
        Me.TicketsTableAdapter.Fill(Me.FinalFinal.Tickets)

    End Sub


    Private Sub BoxItems_SelectedIndexChanged(sender As Object, e As EventArgs) Handles BoxItems.SelectedIndexChanged

        'display sale id details from combobox selection
        PictureBox2.Image = Nothing

        Dim itemId As String = BoxItems.Text
        Dim myVal As Integer = Convert.ToInt32(itemId)

        'determine if it is a custom or set item from sales
        If myVal = 52 Then

            itemDe.Text = Me.SalesTableAdapter.findDe(ticketN, myVal)
            Dim amt As Decimal = Me.SalesTableAdapter.findAmount(ticketN, myVal)
            itemAmt.Text = Math.Round(amt, 2)

        Else
            itemDe.Text = Me.ItemsTableAdapter.getDesc(itemId)
            Dim amt As Decimal = Me.SalesTableAdapter.findAmount(ticketN, myVal)
            itemAmt.Text = Math.Round(amt, 2)

            itemQ.Text = Me.SalesTableAdapter.FindQty(ticketN, myVal)

        End If

        'displaying item img
        Dim itemImg As Byte()

        Dim ticketNum As Integer = Integer.Parse(ticketN)

        Try
            itemImg = Me.SalesTableAdapter.findImgItem(myVal, ticketNum)

        Catch ex As Exception

        End Try

        Dim finCusImage As Image

        Try
            Dim ms As System.IO.MemoryStream = New System.IO.MemoryStream(itemImg)
            finCusImage = System.Drawing.Image.FromStream(ms)

            'prepare item image for display in box
            Dim bmp As Bitmap = New Bitmap(finCusImage, 196, 158)
            Dim finalImg As Image = bmp

            PictureBox2.Image = finalImg

        Catch ex As Exception

        End Try

    End Sub

    Private Sub ButtonBox_Click(sender As Object, e As EventArgs) Handles ButtonBox.Click
        'display ticket details

        PictureBox1.Image = Nothing
        PictureBox2.Image = Nothing

        BoxItems.Items.Clear()
        BoxItems.Text = ""
        itemAmt.Text = ""
        itemQ.Text = ""

        'ticket variables
        Dim Cid As Integer
        Dim tDate As Date
        Dim finNum As Integer

        ticketNum.Text = ""
        ticketN = ComboBox1.Text

        'search ticket number from combobox selection
        Try
            finNum = Convert.ToInt32(ticketN)

        Catch ex As Exception

            Me.Close()

        End Try

        Try
            Cid = Me.TicketsTableAdapter.findC(ticketN)
        Catch ex As Exception

            Me.Close()

        End Try

        Try
            tDate = Me.TicketsTableAdapter.findD(ticketN)
        Catch ex As Exception
            Me.Close()

        End Try

        'make label and input fields visible
        ItemL.Visible = True
        BoxItems.Visible = True


        'customer variables
        Dim cName As String
        Dim cIdN As String
        Dim cCell As String
        Dim cAddr As String
        Dim cusImage As Byte()


        cName = Me.CustomersTableAdapter.findN(Cid)
        cIdN = Me.CustomersTableAdapter.findIDc(Cid)
        cCell = Me.CustomersTableAdapter.findCell(Cid)
        cAddr = Me.CustomersTableAdapter.findAddr(Cid)

        'displaying customer image
        Try
            cusImage = Me.CustomersTableAdapter.findImg(Cid)
        Catch ex As Exception

        End Try

        Dim finCusImage As Image

        Try
            Dim ms As System.IO.MemoryStream = New System.IO.MemoryStream(cusImage)
            finCusImage = System.Drawing.Image.FromStream(ms)
            Dim getbmp As New Bitmap(finCusImage)

            rWidth = getbmp.Width.ToString
            rHeight = getbmp.Height.ToString

            rImage = getbmp

            'prepare customer image for display in box
            Dim bmp As Bitmap = New Bitmap(finCusImage, 196, 158)
            Dim finalImg As Image = bmp

            PictureBox1.Image = finalImg

        Catch ex As Exception

        End Try


        cusName.Text = cName
        cusId.Text = cIdN
        cusCell.Text = cCell
        cusAddr.Text = cAddr


        'items variables
        Dim list As New List(Of Integer)

        Dim n As Integer = 0

        'add items from sales into combobox
        For Each dr As DataRow In FinalFinal.Sales.Rows

            If dr("ticket_ID") = finNum Then

                list.Add(dr("Item_ID"))

            End If
            n += 1
        Next

        DateT.Text = tDate

        For Each item As Integer In list

            Dim val As String = Convert.ToString(item)

            BoxItems.Items.Add(item)

        Next


    End Sub



    Private Sub ticketNum_Click(sender As Object, e As EventArgs) Handles ticketNum.Click
        numPanel.Visible = True
        openKey()

    End Sub

    Private Sub closeBtn_Click(sender As Object, e As EventArgs) Handles closeBtn.Click
        numPanel.Visible = False

    End Sub

    'numpad code
    Private Sub bback_Click(sender As Object, e As EventArgs) Handles bback.Click

        Dim val As String = ticketNum.Text
        Dim newVal As String

        Try
            newVal = Mid(val, 1, Len(val) - 1)
        Catch ex As Exception
        End Try

        ticketNum.Text = newVal

    End Sub

    Private Sub b1_Click(sender As Object, e As EventArgs) Handles b1.Click

        Dim btnN As Integer = 1

        insertNum(btnN)

    End Sub

    Private Sub b2_Click(sender As Object, e As EventArgs) Handles b2.Click
        Dim btnN As Integer = 2

        insertNum(btnN)

    End Sub

    Private Sub b3_Click(sender As Object, e As EventArgs) Handles b3.Click
        Dim btnN As Integer = 3

        insertNum(btnN)

    End Sub

    Public Sub insertNum(valB As Integer)

        Dim val As String = ticketNum.Text
        Dim btnval As Integer = valB
        Dim newVal As String

        If ticketNum.Text = "" Then
            newVal = btnval

        Else
            Dim currVal As String = val

            newVal = currVal & btnval

        End If

        ticketNum.Text = newVal

    End Sub

    Private Sub b4_Click(sender As Object, e As EventArgs) Handles b4.Click
        Dim btnN As Integer = 4

        insertNum(btnN)
    End Sub

    Private Sub b5_Click(sender As Object, e As EventArgs) Handles b5.Click
        Dim btnN As Integer = 5

        insertNum(btnN)
    End Sub

    Private Sub b6_Click(sender As Object, e As EventArgs) Handles b6.Click
        Dim btnN As Integer = 6

        insertNum(btnN)
    End Sub

    Private Sub b7_Click(sender As Object, e As EventArgs) Handles b7.Click
        Dim btnN As Integer = 7

        insertNum(btnN)
    End Sub

    Private Sub b8_Click(sender As Object, e As EventArgs) Handles b8.Click
        Dim btnN As Integer = 8

        insertNum(btnN)
    End Sub

    Private Sub b9_Click(sender As Object, e As EventArgs) Handles b9.Click
        Dim btnN As Integer = 9

        insertNum(btnN)
    End Sub

    Private Sub b0_Click(sender As Object, e As EventArgs) Handles b0.Click
        Dim btnN As Integer = 0

        insertNum(btnN)
    End Sub

    Private Sub numPanel_Leave(sender As Object, e As EventArgs) Handles numPanel.Leave
        numPanel.Visible = False

    End Sub
    Declare Function Wow64DisableWow64FsRedirection Lib "kernel32" (ByRef oldvalue As Long) As Boolean
    Declare Function Wow64EnableWow64FsRedirection Lib "kernel32" (ByRef oldvalue As Long) As Boolean

    'disbale osk for numpad
    Public Sub openKey()

        Dim old As Long

        If Environment.Is64BitOperatingSystem Then
            If Wow64DisableWow64FsRedirection(old) Then
                Dim myproc As Process() = Process.GetProcessesByName("TabTip")
                For Each Process In myproc

                    Process.Dispose()

                Next

                Wow64EnableWow64FsRedirection(old)

            Else
                Dim myproc As Process() = Process.GetProcessesByName("TabTip")
                For Each Process In myproc

                    Process.Dispose()

                Next

            End If
        End If

    End Sub

    'enlarge customer image box is clicked
    Private Sub PictureBox1_Click(sender As Object, e As EventArgs) Handles PictureBox1.Click

        Dim reziseR As New resized

        reziseR.Size = New Size(rWidth, rHeight)
        reziseR.PictureBox1.Size = New Size(rWidth, rHeight)
        reziseR.PictureBox1.Image = rImage


        reziseR.StartPosition = FormStartPosition.Manual
        reziseR.DesktopLocation = Me.DesktopLocation

        reziseR.Show()

    End Sub


End Class
